"""
Django settings for bblab_site project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os


SITE_ID = 1 

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('BBLAB_SECRET_KEY', 'fail')
IS_RANDOM_KEY = SECRET_KEY is 'fail'
if IS_RANDOM_KEY:
    SECRET_KEY = get_random_secret_key()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'bbtools-test.bccfe.ca',
    'bblab-hivresearchtools.ca'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Wiki additions
    'django.contrib.sites.apps.SitesConfig',
    'django.contrib.humanize.apps.HumanizeConfig',
    'django_nyt.apps.DjangoNytConfig',
    'mptt',
    'sekizai',
    'sorl.thumbnail',
    'wiki.apps.WikiConfig',
    #'wiki.plugins.attachments.apps.AttachmentsConfig',
    'wiki.plugins.notifications.apps.NotificationsConfig',
    #'wiki.plugins.images.apps.ImagesConfig',
    'wiki.plugins.macros.apps.MacrosConfig',
    'wiki.plugins.links.apps.LinksConfig',
    'wiki.plugins.help.apps.HelpConfig',

    # Brute force attack protection
    'axes',
    # 'tools.blind_dating',
    # 'tools.phylodating',
    # 'tools.phylodating.apps.PhylodatingConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bblab_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.environ.get('BBLAB_TEMPLATE_ROOT', 'fail'),
            os.environ.get('BBLAB_TOOL_ROOT', 'fail')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.request',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.messages.context_processors.messages',
                "sekizai.context_processors.sekizai",
            ],
        },
    },
]

WSGI_APPLICATION = 'bblab_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'mariadb',
    #     'USER': 'mariadb',
    #     'PASSWORD': os.environ.get('MYSQL_PASSWORD', ''),
    #     'HOST': 'db',
    #     # 'PORT': 3306,
    #     'OPTIONS': {
    #         'init_command': "SET sql_mode='STRICT_TRANS_TABLES', innodb_strict_mode=1",
    #     },
    # }
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ.get('BBLAB_DB_NAME', ''),
        'USER': os.environ.get('BBLAB_DB_USER', ''),
        'PASSWORD': os.environ.get('BBLAB_DB_PASSWORD', ''),
        'HOST': os.environ.get('BBLAB_DB_HOST', ''),
        # 'PORT': '3306'
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesBackend',  # For brute force protection
    'django.contrib.auth.backends.ModelBackend',  # Default model
]

# Brute force protection config
AXES_COOLOFF_TIME = None
AXES_FAILURE_LIMIT = 20
AXES_RESET_ON_SUCCESS = True
AXES_LOCKOUT_URL = "/django/account/lockout/"
AXES_USE_USER_AGENT = True


# Wiki config
WIKI_ACCOUNT_HANDLING = True
WIKI_ACCOUNT_SIGNUP_ALLOWED = True


LOGIN_URL = '/django/account/login/'
LOGOUT_URL = '/django/account/logout/'

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Etc/GMT+7'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_URL = '/static/'
# STATIC_ROOT = os.environ.get('BBLAB_STATIC_ROOT', 'fail')

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# This is for user uploaded files (CAUTION!!)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.environ.get('BBLAB_MEDIA_ROOT', 'fail')


# # This should write errors to an error log.
# print(os.environ.get('BBLAB_LOG_FILE', ''))
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'main': {
#             'format': '{asctime} {module} {process:d} {thread:d} {message}',
#             'style': '{',
#         },
#     },
#     'handlers': {
#         'logfile': {
#             'level': 'ERROR',
#             'class': 'logging.FileHandler',
#             'filename': os.environ.get('BBLAB_LOG_FILE', ''),
#             'formatter': 'main',
#         },
#     },
#     'loggers': {
#         'django': {
#         	'handlers': ['logfile'],
#         	'level': 'ERROR',
#         	'propagate': True,
#         },
#     },
#     'root': {
#             'handlers': ['logfile'],
#             'level': 'ERROR',
#             'propagate': True,
#         }
# }
